#!/usr/bin/env node
/**
 * Script de correction d√©finitive pour mettre √† jour tous les colis
 * dont la cargaison est ARRIV√â mais qui sont encore EN_COURS
 */

const fetch = require('node-fetch');
global.fetch = fetch;

console.log('üîß Correction d√©finitive des colis EN_COURS...\n');

async function fixColisDefinitif() {
  try {
    // 1. R√©cup√©rer toutes les cargaisons
    console.log('üìä R√©cup√©ration des cargaisons...');
    const cargaisonsResponse = await fetch('http://localhost:3006/cargaisons');
    const cargaisons = await cargaisonsResponse.json();
    
    // 2. R√©cup√©rer tous les colis
    console.log('üì¶ R√©cup√©ration des colis...');
    const colisResponse = await fetch('http://localhost:3006/colis');
    const colis = await colisResponse.json();
    
    console.log(`Trouv√© ${cargaisons.length} cargaisons et ${colis.length} colis\n`);
    
    // 3. Identifier les probl√®mes
    let problemesDetectes = 0;
    let colisACorrigee = [];
    
    for (const cargaison of cargaisons) {
      if (cargaison.etatAvancement === 'ARRIVE') {
        const colisAssocies = colis.filter(c => c.cargaisonId === cargaison.id);
        const colisEnCours = colisAssocies.filter(c => c.etat === 'EN_COURS');
        
        if (colisEnCours.length > 0) {
          console.log(`‚ùå Probl√®me d√©tect√©: ${cargaison.numero}`);
          console.log(`   Cargaison: ARRIV√â, mais ${colisEnCours.length} colis EN_COURS`);
          problemesDetectes++;
          colisACorrigee.push(...colisEnCours);
        }
      }
    }
    
    if (problemesDetectes === 0) {
      console.log('‚úÖ Aucun probl√®me d√©tect√© ! Tous les colis sont coh√©rents.');
      return;
    }
    
    console.log(`\nüîß Correction de ${colisACorrigee.length} colis...`);
    
    // 4. Corriger les colis un par un
    let correctionReussie = 0;
    const dateArrivee = new Date().toISOString();
    
    for (const colis of colisACorrigee) {
      try {
        const colisCorrige = {
          ...colis,
          etat: 'ARRIVE',
          dateArrivee: dateArrivee
        };
        
        const updateResponse = await fetch(`http://localhost:3006/colis/${colis.id}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(colisCorrige)
        });
        
        if (updateResponse.ok) {
          console.log(`  ‚úÖ ${colis.id}: EN_COURS ‚Üí ARRIVE`);
          correctionReussie++;
        } else {
          console.log(`  ‚ùå ${colis.id}: √âchec de la mise √† jour`);
        }
        
      } catch (error) {
        console.log(`  ‚ùå ${colis.id}: Erreur - ${error.message}`);
      }
    }
    
    console.log(`\nüéâ Correction termin√©e !`);
    console.log(`   ‚úÖ ${correctionReussie}/${colisACorrigee.length} colis corrig√©s`);
    
    if (correctionReussie === colisACorrigee.length) {
      console.log('\n‚ú® Tous les colis ont √©t√© corrig√©s avec succ√®s !');
      console.log('   Vous pouvez maintenant rafra√Æchir votre interface (Ctrl+Shift+R)');
    } else {
      console.log('\n‚ö†Ô∏è  Certains colis n\'ont pas pu √™tre corrig√©s.');
      console.log('   V√©rifiez que json-server fonctionne sur le port 3006');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la correction:', error.message);
    console.log('\nV√©rifiez que json-server fonctionne:');
    console.log('   npx json-server --watch data/db.json --port 3006');
  }
}

// Ex√©cuter la correction
fixColisDefinitif();
